{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/welcome.component.html","webpack:///./src/app/home/welcome.component.ts","webpack:///./src/app/products/product-delete.component.css","webpack:///./src/app/products/product-delete.component.html","webpack:///./src/app/products/product-delete.component.ts","webpack:///./src/app/products/product-detail.component.css","webpack:///./src/app/products/product-detail.component.html","webpack:///./src/app/products/product-detail.component.ts","webpack:///./src/app/products/product-detail.guard.ts","webpack:///./src/app/products/product-list.component.css","webpack:///./src/app/products/product-list.component.html","webpack:///./src/app/products/product-list.component.ts","webpack:///./src/app/products/product-new.component.css","webpack:///./src/app/products/product-new.component.html","webpack:///./src/app/products/product-new.component.ts","webpack:///./src/app/products/product-update.component.css","webpack:///./src/app/products/product-update.component.html","webpack:///./src/app/products/product-update.component.ts","webpack:///./src/app/products/product.module.ts","webpack:///./src/app/products/product.service.ts","webpack:///./src/app/shared/convert-to-spaces.pipes.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/star.component.css","webpack:///./src/app/shared/star.component.html","webpack:///./src/app/shared/star.component.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'pm-root',\n  template: `\n              <nav class='navbar navbar-expand navbar-light bg-light'>\n                  <a class='navbar-brand'>{{pageTitle}}</a>\n                    <ul class='nav nav-pills'>\n                        <li><a class='nav-link' [routerLink]=\"['/welcome']\">Home</a></li>\n                        <li><a class='nav-link' [routerLink]=\"['/products']\"> Product List</a></li>\n                        <li><a class='nav-link' [routerLink]=\"['/new']\"> New Product </a></li>\n                       \n                    </ul>\n             </nav>\n             <div class='container'>\n             <router-outlet></router-outlet>\n             </div>\n  `\n})\nexport class AppComponent {\n  pageTitle: string = \"Product Management\";\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { ProductModule } from './products/product.module';\n\n\n\n\n\n@NgModule({\n  declarations: [ \n    AppComponent,\n    WelcomeComponent \n    ],\n  imports: [ \n  \n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n    \n      { path : 'welcome', component: WelcomeComponent },\n      { path : '', redirectTo: 'welcome', pathMatch: 'full' },\n      { path : '**',  redirectTo:'welcome',pathMatch: 'full' }\n    ]),\n    ProductModule\n   \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    {{pageTitle}}\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"text-center\\\">\\n        <img src=\\\"./assets/images/logo.jpg\\\"\\n             class=\\\"img-responsive right-block\\\"\\n             style=\\\"max-height:300px;padding-bottom:50px\\\" />\\n          \\n      </div>\\n     \\n     \\n      <div class=\\\"text-center\\\">Developed by:</div>\\n      <div class=\\\"text-center\\\">\\n        <h3>Rahul Navale</h3>\\n      </div>\\n\\n      <div class=\\\"text-center\\\">@rahulnavale</div>\\n      <div class=\\\"text-center\\\">\\n        <a href=\\\"https://www.linkedin.com/in/rahul-navale-67491273\\\">My Profile</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n  public pageTitle = 'Welcome';\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router} from '@angular/router';\nimport { IProduct } from './product';\nimport { ProductService } from './product.service';\n\n@Component({\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css'],\n  providers: [ProductService]\n})\nexport class ProductDeleteComponent implements OnInit {\n  product: IProduct;\n  errorMessage = '';\n\n  constructor(private route:ActivatedRoute,private router: Router, private productService: ProductService) { }\n\n  ngOnInit() {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = +param;\n      this.delete(id);\n    }\n  }\n\n  delete(id:number)  {\n    console.log(\"Product to be deleted is + \", id);\n     this.productService.deleteProduct(id).subscribe(\n      product => this.product=product,\n      error => this.errorMessage = <any>error);\n      this.router.navigate(['/welcome'])\n } \n\n  onBack() {\n    this.router.navigate(['/products']);\n  }\n\n}\n","module.exports = \"button{\\r\\n    margin: 13px;\\r\\n  }\"","module.exports = \"<div class='card'\\n     *ngIf='product'>\\n  <div class='card-header'>\\n    {{pageTitle + ': ' + product.productName}}\\n  </div>\\n\\n  <div class='card-body'>\\n    <div class='row'>\\n      <div class='col-md-8'>\\n        <div class='row'>\\n          <div class='col-md-4'>Name:</div>\\n          <div class='col-md-8'>{{product.productName}}</div>\\n        </div>\\n        <div class='row'>\\n          <div class='col-md-4'>Code:</div>\\n          <div class='col-md-8'>{{product.productCode | lowercase | convertToSpaces: '-'}}</div>\\n        </div>\\n        <div class='row'>\\n          <div class='col-md-4'>Description:</div>\\n          <div class='col-md-8'>{{product.description}}</div>\\n        </div>\\n        <div class='row'>\\n          <div class='col-md-4'>Availability:</div>\\n          <div class='col-md-8'>{{product.releaseDate}}</div>\\n        </div>\\n        <div class='row'>\\n          <div class='col-md-4'>Price:</div>\\n          <div class='col-md-8'>{{product.price|currency:\\\"&#8377;\\\"}}</div>\\n        </div>\\n        <div class='row'>\\n          <div class='col-md-4'>5 Star Rating:</div>\\n          <div class='col-md-8'>\\n            <pm-star [rating]='product.starRating'>\\n            </pm-star>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class='col-md-4'>\\n        <img class='center-block img-responsive'\\n             [style.width.px]='200'\\n             [style.margin.px]='2'\\n             [src]='product.imageUrl'\\n             >\\n      </div>\\n    </div>\\n    <div class=\\\"btn-toolbar\\\">\\n    <button class='btn btn-primary' style='width:80px' [routerLink]=\\\"['/update',product.productId]\\\">Update</button>\\n    <button class='btn btn-danger' style='width:80px' [routerLink]=\\\"['/delete',product.productId]\\\">Delete</button>         \\n    </div>\\n  </div>\\n\\n  <div class='card-footer'>\\n    <button class='btn btn-warning'\\n            (click)='onBack()'\\n            style='width:80px'>\\n      <i class='fa fa-chevron-left'></i> Back\\n    </button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { ProductService } from './product.service';\nimport { IProduct} from './product';\n@Component({\n   \n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css'],\n  providers: [ProductService]\n})\nexport class ProductDetailComponent implements OnInit {\n\n    pageTitle:string = 'Details';\n    product: IProduct;\n    errorMessage = '';\n    constructor(private route:ActivatedRoute,private router: Router, private productService: ProductService) { }\n\n  ngOnInit() {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = +param;\n      this.getProduct(id);\n    }\n  }\n  getProduct(id: number) {\n    this.productService.getProduct(id).subscribe(\n      product => this.product = product,\n      error => this.errorMessage = <any>error);\n  }\n  onBack():void{\n    this.router.navigate(['/products']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot,Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductDetailGuard implements CanActivate {\n\n  constructor(private router:Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    \n    let id = +next.url[1].path;\n    if (isNaN(id) || id < 1) {\n      alert(\"Invalid Product Id\");\n      this.router.navigate([\"/products\"]);\n      return false;\n    };  \n    return true;  \n  }\n}\n","module.exports = \"thead{\\r\\n    color: #337AB7\\r\\n}\"","module.exports = \"<div class='card'>\\r\\n    <div class='card-header'>\\r\\n        {{pageTitle}}\\r\\n    </div>\\r\\n    <div class='card-body'>\\r\\n        <div class='row'>\\r\\n            <div class='col-md-2'>Filter by:</div>\\r\\n            <div class='col-md-4'>\\r\\n                <input type='text'\\r\\n                        [(ngModel)]= 'listFilter' />\\r\\n            </div>\\r\\n            </div>\\r\\n            <div class='row'>\\r\\n                <div class='col-md-6'>\\r\\n                    <h4>Filtered by: {{listFilter}}</h4>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class='table-responsive'>\\r\\n                <table class='table'\\r\\n                    *ngIf='products && products.length'>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>\\r\\n                                <button class='btn btn-primary'\\r\\n                                (click)='toggleImage()'>\\r\\n                                {{showImage ? 'Hide' : 'Show'}}\\r\\n                                     Image\\r\\n                                </button>\\r\\n                            </th>\\r\\n                            <th>Product</th>\\r\\n                            <th>Code</th>\\r\\n                            <th>Available</th>\\r\\n                            <th>Price</th>\\r\\n                            <th>Star Rating</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let product of filteredProducts'>\\r\\n                            <td>\\r\\n                                    <a [routerLink]=\\\"['/products',product.productId]\\\"><img *ngIf='showImage'\\r\\n                                    [src]='product.imageUrl'\\r\\n                                    [title]='product.productName'\\r\\n                                    [style.width.px]='imageWidth'\\r\\n                                    [style.margin.px]='imageMargin'></a>\\r\\n                            </td>\\r\\n                            <td><a [routerLink]=\\\"['/products',product.productId]\\\">{{product.productName}}</a></td>\\r\\n                            <td>{{product.productCode | lowercase | convertToSpaces: '-' }}</td>\\r\\n                            <td>{{product.releaseDate}}</td>\\r\\n                            <td>{{product.price | currency:\\\"&#8377;\\\"}}</td>\\r\\n                            <td><pm-star [rating]='product.starRating' (ratingClicked)='onRatingClicked($event)'></pm-star></td>\\r\\n                          </tr>\\r\\n\\r\\n\\r\\n\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IProduct } from './product';\r\nimport { ProductService } from './product.service';\r\n@Component({\r\n \r\n   templateUrl: './product-list.component.html' ,\r\n   styleUrls: ['./product-list.component.css'],\r\n   providers: [ProductService]\r\n})\r\nexport class ProductListComponent implements OnInit {\r\npageTitle: string='RSA Store';\r\nimageWidth: number = 50;\r\nimageMargin:number = 2;\r\nshowImage : boolean = false;\r\nerrorMessage: string;\r\n_listFilter: string;\r\nfilteredProducts: IProduct[];\r\n\r\n\r\nget listFilter():string{\r\n  return this._listFilter;\r\n}\r\nset listFilter(value:string){\r\n  this._listFilter = value;\r\n  this.filteredProducts = this.listFilter ? this.performFilter(this.listFilter):this.products;\r\n}\r\n\r\nproducts: IProduct[];\r\n\r\nconstructor(private productService:ProductService){ \r\n}\r\n\r\nonRatingClicked(message:string):void{\r\n  this.pageTitle = 'Product List: ' + message;\r\n}\r\n\r\nperformFilter(filterBy: string):IProduct[]{\r\n  filterBy = filterBy.toLocaleLowerCase();\r\n  return this.products.filter((product:IProduct)=>\r\n  product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n\r\n}\r\n\r\ntoggleImage(): void {\r\n     this.showImage = !this.showImage;\r\n}\r\nngOnInit():void {\r\n this.productService.getProducts()\r\n    .subscribe(\r\n      products => {\r\n        this.products = products;\r\n        this.filteredProducts = this.products;\r\n      },\r\n      error => this.errorMessage = <any>error\r\n    );\r\n}\r\n}","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"card-body\\\">\\n<div class=\\\"form-group\\\">\\n  <h1>New Product </h1>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"saveProduct(form.value)\\\" class=\\\"border\\\">\\n  <table>\\n  <tr>\\n      <td><label>ProductID:</label></td>\\n      <td><input type=\\\"text\\\" name=\\\"productId\\\" ngModel></td>\\n  </tr>\\n  <tr>\\n      <td><label>ProductName:</label></td>\\n      <td><input type=\\\"text\\\" name=\\\"productName\\\" ngModel></td>\\n  </tr>\\n  <tr>\\n      <td><label>ProductCode:</label></td>\\n      <td><input type=\\\"text\\\" name=\\\"productCode\\\" ngModel></td>\\n  </tr>\\n  <tr>\\n        <td><label>ReleaseDate:</label></td>\\n        <td><input type=\\\"text\\\" name=\\\"releaseDate\\\" ngModel></td>\\n  </tr>\\n   <tr>\\n      <td> <label>Price:</label></td>\\n      <td><input type=\\\"text\\\" name=\\\"price\\\" ngModel></td>\\n  </tr>\\n  <tr>\\n    <td> <label>Description:</label></td>\\n    <td><input type=\\\"text\\\" name=\\\"description\\\" ngModel></td>\\n</tr>\\n<tr>\\n  <td> <label>StarRating:</label></td>\\n  <td><input type=\\\"text\\\" name=\\\"starRating\\\" ngModel></td>\\n</tr>\\n\\n<tr>\\n  <td> <label>ImageUrl:</label></td>\\n  <td><input type=\\\"text\\\" name=\\\"imageUrl\\\" ngModel></td>\\n</tr>\\n  \\n  <tr>\\n      <td><button type=\\\"submit\\\">Submit</button> </td>\\n  </tr>\\n</table>\\n</form>\\n</div>\\n</div>\\n<div class='card-footer'>\\n  <button class='btn btn-outline-secondary'\\n          (click)='onBack()'\\n          style='width:80px'>\\n    <i class='fa fa-chevron-left'></i> Back\\n  </button>\\n</div> -->\\n\\n\\n\\n<h1>New Product</h1>\\n<hr>\\n<div class=\\\"col-md-6\\\">\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"saveProduct(form.value)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"productId\\\">ProductID</label>\\n      <input (ngModel)=\\\"form.productId\\\" name=\\\"productId\\\" required id=\\\"productId\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Product ID of Product..\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"productName\\\">ProductName</label>\\n      <input (ngModel)=\\\"form.productName\\\" name=\\\"productName\\\" required productName=\\\"productName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name of Product..\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"productCode\\\">ProductCode</label>\\n      <input (ngModel)=\\\"form.productCode\\\" name=\\\"productCode\\\" required productCode=\\\"productCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Code of Product..\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"releaseDate\\\">ReleaseDate</label>\\n      <input (ngModel)=\\\"form.releaseDate\\\" name=\\\"releaseDate\\\" required releaseDate=\\\"releaseDate\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Date of Product..\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"price\\\">Price</label>\\n      <input (ngModel)=\\\"form.price\\\" name=\\\"price\\\" required productCode=\\\"price\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Price of Product..\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description</label>\\n      <input (ngModel)=\\\"form.description\\\" name=\\\"description\\\" required description=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description of Product..\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"starRating\\\">StarRating</label>\\n      <input (ngModel)=\\\"form.starRating\\\" name=\\\"starRating\\\" required starRating=\\\"starRating\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Star Rating of Product..\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"imageUrl\\\">ImageUrl</label>\\n      <input (ngModel)=\\\"form.imageUrl\\\" name=\\\"imageUrl\\\" required imageUrl=\\\"imageUrl\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Image URL of Product..\\\" />\\n    </div>\\n  \\n    <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\">Save</button>\\n    \\n  </form>\\n</div>\\n\\n<div class='card-footer'>\\n  <button class='btn btn-outline-secondary'\\n          (click)='onBack()'\\n          style='width:80px'>\\n    <i class='fa fa-chevron-left'></i> Back\\n  </button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { IProduct } from './product';\nimport { ProductService } from './product.service';\n\n@Component({\n  \n  templateUrl: './product-new.component.html',\n  styleUrls: ['./product-new.component.css'],\n  providers: [ProductService]\n})\nexport class ProductNewComponent implements OnInit {\n\n  constructor(private productService:ProductService,private router: Router) { }\n\n  ngOnInit() {\n  }\n  saveProduct(formValues) {\n\n     this.productService.saveProduct(formValues).subscribe(() => {\n     \n     this.router.navigate(['/products'])\n   });\n  }\n\n  onBack() {\n    this.router.navigate(['/welcome'])\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<h1>Update Product</h1>\\n\\n<hr>\\n<div class=\\\"col-md-8\\\" *ngIf=\\\"product\\\">\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"update(form.product)\\\">\\n    \\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"productId\\\">ProductID</label>\\n      <input type=\\\"text\\\"  name=\\\"productId\\\" [(ngModel)]=\\\"product.productId\\\" disabled class=\\\"form-control\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"productName\\\">ProductName</label>\\n      <input type=\\\"text\\\"  name=\\\"productName\\\" [(ngModel)]=\\\"product.productName\\\" class=\\\"form-control\\\"  />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"productCode\\\">ProductCode</label>\\n      <input type=\\\"text\\\" name=\\\"productCode\\\" [(ngModel)]=\\\"product.productCode\\\" class=\\\"form-control\\\"  />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"releaseDate\\\">ReleaseDate</label>\\n      <input type=\\\"text\\\"  name=\\\"releaseDate\\\"   [(ngModel)]=\\\"product.releaseDate\\\" class=\\\"form-control\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"price\\\">Price</label>\\n      <input type=\\\"number\\\" name=\\\"price\\\"[(ngModel)]=\\\"product.price\\\"  class=\\\"form-control\\\"  />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description</label>\\n      <input  type=\\\"text\\\" name=\\\"description\\\"  [(ngModel)]=\\\"product.description\\\" class=\\\"form-control\\\"  />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"starRating\\\">StarRating</label>\\n      <input  type=\\\"number\\\"  name=\\\"starRating\\\"  [(ngModel)]=\\\"product.starRating\\\"  class=\\\"form-control\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"imageUrl\\\">ImageUrl</label>\\n      <input type=\\\"text\\\"  name=\\\"imageUrl\\\" [(ngModel)]=\\\"product.imageUrl\\\" class=\\\"form-control\\\"  />\\n    </div>\\n  \\n    <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\">Save</button>\\n    <button class='btn btn-outline-secondary'(click)='onBack()'style='width:80px'> <i class='fa fa-chevron-left'></i> Back </button>\\n  </form>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router} from '@angular/router';\nimport { IProduct } from './product';\nimport { ProductService } from './product.service';\n\n@Component({\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css'],\n  providers: [ProductService]\n})\nexport class ProductUpdateComponent implements OnInit {\n  product: IProduct;\n  errorMessage = '';\n\n  constructor(private route:ActivatedRoute,private router: Router, private productService: ProductService) { }\n\n  ngOnInit() {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = +param;\n      this.getProduct(id);\n    }\n  }\n  getProduct(id: number) {\n    this.productService.getProduct(id).subscribe(\n      product => this.product = product,\n      error => this.errorMessage = <any>error);\n  }\n\n  update(form)  {\n   \n   this.productService.updateProduct(this.product).subscribe(\n     product => this.product=product,\n     error => this.errorMessage = <any>error);\n     this.router.navigate(['/products'])\n} \nonBack() {\n    this.router.navigate(['/welcome']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ProductListComponent } from './product-list.component';\nimport { ProductDetailComponent } from './product-detail.component';\nimport { ConvertToSpacesPipe } from './../shared/convert-to-spaces.pipes';\nimport { ProductDetailGuard } from './product-detail.guard';\nimport { ProductNewComponent } from './product-new.component';\nimport { ProductUpdateComponent } from './product-update.component';\nimport { ProductDeleteComponent } from './product-delete.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n            RouterModule.forChild([\n              { path : 'products', component: ProductListComponent },\n              { path : 'products/:id',\n                  canActivate:[ProductDetailGuard],\n                  component:ProductDetailComponent},\n               { path : 'new', component: ProductNewComponent },\n               { path : 'update/:id', component: ProductUpdateComponent },\n               { path : 'delete/:id', component: ProductDeleteComponent }\n            ]),\n            SharedModule\n           ],\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent,\n    ConvertToSpacesPipe,\n    ProductNewComponent,\n    ProductUpdateComponent,\n    ProductDeleteComponent\n  ]\n})\nexport class ProductModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse,HttpHeaders } from '@angular/common/http';\r\nimport {Headers,RequestOptions,RequestMethod} from '@angular/http';\r\nimport { IProduct } from './product';\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { map,catchError,tap} from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n    //private productUrl = 'http://localhost/api/products/';\r\n    //private productUrl = 'http://localhost:49951/api/products/';\r\n   private productUrl='https://myrsawebapi.azurewebsites.net/api/products/';\r\n\r\n\r\n    constructor(private http:HttpClient){\r\n    }\r\n\r\n    getProducts(): Observable<IProduct[]> {\r\n      \r\n       return this.http.get<IProduct[]>(this.productUrl)\r\n            .pipe(\r\n                tap(data => JSON.stringify(data)),\r\n                catchError(this.handleError)\r\n            );  \r\n    }\r\n    \r\n    getProduct(id:number):Observable<IProduct> {\r\n        return this.http.get<IProduct>(this.productUrl + id)\r\n          .pipe(catchError(this.handleError))\r\n    }\r\n\r\n    saveProduct(product) {\r\n          console.log(\"Product to be added is \" + product);\r\n        let options = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\r\n        return this.http.post<IProduct>(this.productUrl, product, options)\r\n          .pipe(catchError(this.handleError))\r\n    }\r\n\r\n    updateProduct(product:IProduct):Observable<IProduct>{\r\n        let options = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\r\n        return this.http.put<IProduct>(this.productUrl + product.productId,product,options)\r\n        .pipe(catchError(this.handleError))\r\n    }\r\n\r\n    deleteProduct(id:number):Observable<IProduct>{\r\n        let options = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\r\n        return this.http.delete<IProduct>(this.productUrl + id,options)\r\n        .pipe(catchError(this.handleError))\r\n    }\r\n\r\n    private handleError(err:HttpErrorResponse){\r\n        let errorMessage = '';\r\n        if(err.error instanceof ErrorEvent){\r\n            errorMessage = `Ann Error occurred:${err.status},err message is : ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n\r\n}","import { Pipe,PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name:'convertToSpaces'\r\n})\r\nexport class ConvertToSpacesPipe implements PipeTransform{\r\n          \r\n    transform(value:string,character:string):string{\r\n               return value.replace(character,' ');\r\n           } \r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { StarComponent } from './star.component';\n\n@NgModule({\n  imports: [\n\n\n  CommonModule\n  ],\n  declarations: [\n    StarComponent\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    StarComponent    \n  ]\n})\nexport class SharedModule { }\n","module.exports = \".crop {\\n  overflow: hidden;\\n color:orange;\\n}\\ndiv {\\n  cursor: pointer;\\n}\\n\\n\"","module.exports = \"<div class=\\\"crop\\\"\\n     [style.width.px]=\\\"starWidth\\\"\\n     [title]=\\\"rating\\\"\\n     (click)=\\\"onClick()\\\">\\n  <div style=\\\"width: 75px\\\">\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n  </div>\\n</div>\"","import { Component, OnChanges,Input, Output,EventEmitter } from \"@angular/core\";\r\n\r\n\r\n\r\n@Component({\r\n    selector:'pm-star',\r\n    templateUrl:'./star.component.html',\r\n    styleUrls:['./star.component.css']\r\n})\r\nexport class StarComponent implements OnChanges {\r\n        @Input() rating:number;\r\n        starWidth:number;\r\n       @Output() ratingClicked: EventEmitter<string> =\r\n                new EventEmitter<string>();\r\n\r\n        ngOnChanges():void{\r\n            this.starWidth = this.rating * 75 / 5;\r\n        }\r\n\r\n        onClick():void {\r\n            this.ratingClicked.emit(`The rating ${this.rating} was clicked`);\r\n        }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// if (environment.production) {\n//   enableProdMode();\n// }\nenableProdMode();\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}